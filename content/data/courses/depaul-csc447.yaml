title: Programming Language Concepts
start: 2010-03-31
end: 2010-06-09
professor: Corin Pitcher
university: DePaul
categories: [Computer Science, Languages]
languages: [Javascript, Ruby, Scala, Scheme]
syllabus:
  - Introduction
    - Lisp, Scheme
    - Recursion, Higher-Order Functions, Let Bindings
    - List Functions
    - Read-Eval-Print-Loop
  - Functional Programming
    - Scala
    - Data Types; Tuples, Lists
    - Immutability
    - Function Types and Higher-Order Functions
    - For Expressions, List Comprehensions
    - Tail Recursion
    - Anonymous Functions
    - Enumerated Types
    - Structured Types
    - Option Types
    - Recursive Types
  - Scope and Storage Management
    - Parameter Passing (Call-by-Value, Call-by-Reference)
    - Static Scope
    - Dynamic Scope
    - First Class Functions
    - Closures
  - Interpreters and Operational Semantics
    - Abstract Syntax Trees
    - Informal and Formal Semantics
    - Operational Semantics of Arithmetic, While-loop, Let, Functions, Closures
  - Object-Oriented Programming
    - Dynamic Lookup
    - Inheritance
    - Subtyping
    - Encapsulation
    - Mixins/Traits
    - Prototypes
  - Type Systems
    - Static Analysis
    - Parametric Polymorphism
    - Type Inference
    - Logic and Constraint Programming
    - Generics and Type Variance
